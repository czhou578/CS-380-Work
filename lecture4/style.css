
body {
    background-color: skyblue;
}

/* this block uses a tag name; it will apply to all h1 elements */
h1 {
    /* color applies to foreground elements like text */
    color: #1d542b;
    /* this uses the rgba() function to make the background 50% transparent */
    background-color: rgba(220, 220, 200, .5);
    font-family: cursive;
}

/* This block uses a class name. Any element with a class attribute
   containing "error" will receive this style.
 */
.error {
    color: red;
}

.emphasized {
    text-decoration: underline;
}

/* This block combines two class names. Any element with both
   "emphasized" and "error" in its name will receive this style.
*/
.emphasized.error {
    font-weight: bolder;
}

/* This block uses an id. It only applies to the element with id="title".
*/
#title {
    font-size: 72px;
    line-height: 72px;
}

.sarcastic {
    font-style: italic;
}

.spaced {
    /* these apply to top, right, bottom, and left, respectively */
    margin: 6px 0 12px 4px;
}

.centered {
    text-align: center;
}

.sample-rectangle {
    /* this will be 1/3 as wide as its parent, the document body */
    width: 33%;
    height: 200px;
    background-color: orange;
    border-radius: 24px;
}

.sample-circle {
    width: 64px;
    height: 64px;
    /* we can create a circle by setting the border-radius to 50% of the height and width */
    border-radius: 32px;
    border: 1px solid black;
}

/*
colors:
- can use #RRGGBB to specify, where each R, G, or B is a hexidecimal number
- can use a name of a color, like skyblue
- can use a function, such as rgb() or rgba() that takes numbers 0-255.
-- rgba() also takes a transparency or "alpha" value between 0.0 and 1.0.
*/

/*
rule application:
- can use tag names, like h1, body, div, etc.
- can create classes, which start with a .
- can use ids, which start with a #
*/

/*
fonts:
- use font-family to specify a comma-separated list of font names
- not every user will have all the fonts installed, so 
  listing several gives fallback options
- can include additional fonts through @include in CSS or through 
  <link> tags in HTML, but be careful to review the license to make 
  sure it's okay to use that font in your project
- sans-serif is a good font family to use for web content, serif for
  printed content. Monospace is best for displaying code.
*/

/*
box model:
- every element has a rectangle/box that surrounds its contents
- the box is made of multiple layers:
-- padding immediately surrounds the content
-- the border and outline surround the padding
-- the margin surrounds the border and outline
- border and outline can have their own colors and line style
- margin and padding can have a single number that applies to all four
  sides, two numbers that apply to top+bottom and left+right, or four
  numbers that apply to top, right, bottom, left (clockwise order)
*/

/*
element sizing:
- you can use the width and height rules to set width and height
-- does not work for "display: inline", which will only be as large 
   as the contents of the element
- you can use several different units of measurement for sizing:
-- "px" defines size in pixels
-- "%" defines size as a percentage of the element's parent
-- "em" defines size in terms of the size of a capital M at the
   element's current font size
-- there are others like "cm" that are available but not recommended
- the same units are available for other properties, such as margin,
  padding, font-size, basically anything defining the size of something
- By default, width and height will only apply to the content and
  padding. You have to change the "box-sizing" property if you want
  them to incorporate the border and margin as well.
*/